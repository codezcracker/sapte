"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var preact_render_to_string_1 = require("preact-render-to-string");
var preact_1 = require("preact");
var util_1 = require("./util");
var StringRenderer = /** @class */ (function () {
    function StringRenderer() {
    }
    StringRenderer.prototype.render = function (el, context) {
        // FIXME - The behavior here is different across different Preact versions.
        // Historically this was because preact-render-to-string v4.x did not support
        // Preact 10. In future we should unify them. This will be a breaking change
        // as it will affect the output for either Preact v8 or Preact v10.
        if (util_1.isPreact10()) {
            var tempContainer = document.createElement('div');
            preact_1.render(el, tempContainer);
            var html = tempContainer.innerHTML;
            preact_1.render(preact_1.h('unmount-me', {}), tempContainer);
            return html;
        }
        else {
            return preact_render_to_string_1.render(el, context);
        }
    };
    StringRenderer.prototype.simulateError = function (nodeHierarchy, rootNode, error) {
        throw new Error('Static rendering does not support simulating errors');
    };
    StringRenderer.prototype.simulateEvent = function (node, eventName, args) {
        throw new Error('Static rendering does not support simulating events');
    };
    StringRenderer.prototype.unmount = function () {
        // No-op
    };
    StringRenderer.prototype.getNode = function () {
        return null;
    };
    StringRenderer.prototype.batchedUpdates = function (fn) {
        fn();
    };
    return StringRenderer;
}());
exports.default = StringRenderer;
